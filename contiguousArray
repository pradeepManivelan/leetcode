Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.

Example 1:
Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.
Example 2:
Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.
Note: The length of the given binary array will not exceed 50,000.

class Solution {
    public int findMaxLength(int[] nums) {
        if(nums.length == 0) return 0;
        Map<Integer, Integer> map1 = new HashMap<>();
        int count = 0, counter = 0, max = 0 ;
        for(int i = 0;i < nums.length;i++){
            if(nums[i] == 0) counter -= 1;
            else if(nums[i] == 1) counter += 1;

        if(!map1.containsKey(counter)){
            map1.put(counter,i);
        }
            else{
                max = Math.max(max, i - map1.get(counter));
            }
            if(counter == 0){
                max = i + 1;
            }
        } 
        return max;
    }
}
