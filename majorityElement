Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3


class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer, Integer> map1 = new HashMap<>();
        for(int num:nums){
            map1.put(num, map1.getOrDefault(num,0)+1);
        }
    
        int final_key = Collections.max(map1.entrySet(), (entry1, entry2) -> entry1.getValue() - entry2.getValue()).getKey();
        
        return (map1.get(final_key)>nums.length/2)?final_key:0;
    }
}
