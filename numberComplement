Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.

 

Example 1:

Input: 5
Output: 2
Explanation: The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.
 

Example 2:

Input: 1
Output: 0
Explanation: The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.
 

Note:

The given integer is guaranteed to fit within the range of a 32-bit signed integer.
You could assume no leading zero bit in the integerâ€™s binary representation.
This question is the same as 1009: https://leetcode.com/problems/complement-of-base-10-integer/



Solution:


class Solution {
    public int findComplement(int num) {
    int count = 0,rem, comp = 0;
        int n = num;
        while(n > 0){
            rem = n % 2;
            comp = comp + (1 - rem) * (int)(Math.pow(2,count));
            count++;
            n = n / 2;
        }return comp;
        
    }
}

